{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(response);\n\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json());\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","log","authorize","response","data","user","localStorage","setItem","jwt","getContent","token","Authorization"],"sources":["/Users/Administrator/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((response) => response.json())\n\n    .then((data) => {\n      console.log(response);\n      if (data.user) {\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    });\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQEC,GAAD,IAAS;IACb,OAAOA,GAAG,CAACC,IAAJ,EAAP;EACD,CAVI,EAWJC,KAXI,CAWGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMG,SAAS,GAAG,CAAChB,KAAD,EAAQC,QAAR,KAAqB;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQEQ,QAAD,IAAcA,QAAQ,CAACN,IAAT,EARf,EAUJF,IAVI,CAUES,IAAD,IAAU;IACdJ,OAAO,CAACC,GAAR,CAAYE,QAAZ;;IACA,IAAIC,IAAI,CAACC,IAAT,EAAe;MACbC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,GAAjC;MACA,OAAOJ,IAAP;IACD;EACF,CAhBI,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMK,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOtB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB,kBAFT;MAGPoB,aAAa,EAAG,UAASD,KAAM;IAHxB;EAF0B,CAAzB,CAAL,CAOJf,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,CAAP;AAQD,CATM"},"metadata":{},"sourceType":"module"}