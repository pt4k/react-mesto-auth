{"ast":null,"code":"const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: 'e5a37e81-cb9a-4a0e-bacc-f2b0bcf5bc25',\n    'Content-Type': 'application/json'\n  }\n});\n\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  } //получить ответ\n\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  } //получаем данные пользователя\n\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  } //получаем массив карточек\n\n\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  } //метод добавления карточки\n\n\n  addNewCard(newCard) {\n    return fetch(this._baseUrl + '/cards/', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link\n      })\n    }).then(this._handleResponse);\n  } //метод удаления карточки\n\n\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + `${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  } //редактирование данных профайла\n\n\n  patchUserInfo(userInfo) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userInfo.firstname,\n        about: userInfo.about\n      })\n    }).then(this._handleResponse);\n  } //редактирование аватара\n\n\n  pathUserAvatar(userInfo) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: userInfo.avatar\n      })\n    }).then(this._handleResponse);\n  } //поставить лайк\n\n\n  handleLikeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + `${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleResponse);\n  } //убрать лайк\n\n\n  handleDislikeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + `${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n}\n\nexport default api;","map":{"version":3,"names":["api","Api","baseUrl","headers","authorization","constructor","_baseUrl","_headers","_handleResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","addNewCard","newCard","body","JSON","stringify","name","link","deleteCard","cardId","patchUserInfo","userInfo","firstname","about","pathUserAvatar","avatar","handleLikeCard","handleDislikeCard"],"sources":["/Users/Administrator/dev/mesto-react/src/utils/api.js"],"sourcesContent":["const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n    headers: {\n        authorization: 'e5a37e81-cb9a-4a0e-bacc-f2b0bcf5bc25',\n        'Content-Type': 'application/json'\n    }\n});\n\nclass Api {\n    constructor({ baseUrl, headers }) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n    }\n\n    //получить ответ\n    _handleResponse(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n  //получаем данные пользователя\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', { \n            method: 'GET',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    //получаем массив карточек\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'GET',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    //метод добавления карточки\n    addNewCard(newCard) {\n        return fetch(this._baseUrl + '/cards/', {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: newCard.name,\n                link: newCard.link\n            }),\n        })\n        .then(this._handleResponse)\n    }\n\n    //метод удаления карточки\n    deleteCard(cardId) {\n        return fetch(this._baseUrl + '/cards/' + `${cardId}`, {\n          method: 'DELETE',\n          headers: this._headers\n        })\n        .then(this._handleResponse)\n    }\n\n    //редактирование данных профайла\n    patchUserInfo(userInfo) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: userInfo.firstname,\n                about: userInfo.about\n            }),\n        })\n        .then(this._handleResponse)\n    }\n\n    //редактирование аватара\n    pathUserAvatar(userInfo) {\n        return fetch(this._baseUrl + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: userInfo.avatar\n            }),\n        })\n        .then(this._handleResponse)\n    }\n\n    //поставить лайк\n    handleLikeCard(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + `${cardId}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n        .then(this._handleResponse)\n    }\n\n    //убрать лайк\n    handleDislikeCard(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + `${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._handleResponse)\n    }\n}\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}