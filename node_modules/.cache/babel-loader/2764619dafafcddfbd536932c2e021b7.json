{"ast":null,"code":"var _jsxFileName = \"/Users/Administrator/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext);\n  console.log(currentUser);\n  React.useEffect(() => {\n    api.getInitialCards().then(cardList => {\n      setCards(cardList);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  console.log(props.card);\n\n  function handleCardDelete(card) {\n    // проверяем, нами ли создана карточка\n    const isOwn = props.card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.avatar,\n          style: {\n            backgroundImage: `url(${currentUser.avatar})`\n          },\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar\",\n          onClick: props.onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__title\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__text\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          type: \"button\",\n          onClick: props.onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"add\",\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        card: item,\n        onCardClick: props.onCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","api","Card","CurrentUserContext","Main","props","cards","setCards","useState","currentUser","useContext","console","log","useEffect","getInitialCards","then","cardList","catch","err","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter","avatar","backgroundImage","onEditAvatar","name","about","onEditProfile","onAddPlace","item","onCardClick"],"sources":["/Users/Administrator/dev/mesto-react/src/components/Main.js"],"sourcesContent":["import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction Main(props) {\n\n    const [cards, setCards] = React.useState([]);\n\n    const currentUser = React.useContext(CurrentUserContext);\n        console.log(currentUser);\n\n    React.useEffect(() => {\n        api.getInitialCards()\n        .then((cardList) => {\n            setCards(cardList);\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n    console.log(props.card);\n    function handleCardDelete(card) {\n        // проверяем, нами ли создана карточка\n        const isOwn = props.card.owner._id === currentUser._id;\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id).then(() => {\n            setCards(cards => cards.filter((c) => c._id !== card._id));\n        });\n    }\n\n    return (\n        <main className=\"content\">\n        \n        <section className=\"profile\">\n            <div className=\"profile__avatar-overlay\">\n                <img src={currentUser.avatar} style={{ backgroundImage: `url(${currentUser.avatar})` }} alt=\"Аватар\" className=\"profile__avatar\" onClick={props.onEditAvatar} />\n            </div>\n            <div className=\"profile__info\">\n                <h1 className=\"profile__title\">{currentUser.name}</h1>\n                <p className=\"profile__text\">{currentUser.about}</p>\n                <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <button aria-label=\"add\" className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\n        </section>\n\n        <section className=\"elements\">\n            {cards.map((item) => (\n            <Card \n            card={item} \n            key={item._id}\n            onCardClick={props.onCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete} />))}\n        </section>\n\n        </main>\n    );\n}\n\nexport default Main;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;EAEA,MAAMC,WAAW,GAAGT,KAAK,CAACU,UAAN,CAAiBP,kBAAjB,CAApB;EACIQ,OAAO,CAACC,GAAR,CAAYH,WAAZ;EAEJT,KAAK,CAACa,SAAN,CAAgB,MAAM;IAClBZ,GAAG,CAACa,eAAJ,GACCC,IADD,CACOC,QAAD,IAAc;MAChBT,QAAQ,CAACS,QAAD,CAAR;IACH,CAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;MACZP,OAAO,CAACC,GAAR,CAAYM,GAAZ;IACH,CAND;EAOH,CARD,EAQG,EARH;;EAUA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;IAC1B;IACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUhB,WAAW,CAACgB,GAA3C,CAAhB,CAF0B,CAI1B;;IACAxB,GAAG,CAACyB,oBAAJ,CAAyBN,IAAI,CAACK,GAA9B,EAAmC,CAACJ,OAApC,EAA6CN,IAA7C,CAAmDY,OAAD,IAAa;MAC3DpB,QAAQ,CAAEqB,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;IACH,CAFD;EAGH;;EACDnB,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACe,IAAlB;;EACA,SAASW,gBAAT,CAA0BX,IAA1B,EAAgC;IAC5B;IACA,MAAMY,KAAK,GAAG3B,KAAK,CAACe,IAAN,CAAWa,KAAX,CAAiBR,GAAjB,KAAyBhB,WAAW,CAACgB,GAAnD,CAF4B,CAI5B;;IACAxB,GAAG,CAACiC,UAAJ,CAAed,IAAI,CAACK,GAApB,EAAyBV,IAAzB,CAA8B,MAAM;MAChCR,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAAC6B,MAAN,CAAcL,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAnC,CAAV,CAAR;IACH,CAFD;EAGH;;EAED,oBACI;IAAM,SAAS,EAAC,SAAhB;IAAA,wBAEA;MAAS,SAAS,EAAC,SAAnB;MAAA,wBACI;QAAK,SAAS,EAAC,yBAAf;QAAA,uBACI;UAAK,GAAG,EAAEhB,WAAW,CAAC2B,MAAtB;UAA8B,KAAK,EAAE;YAAEC,eAAe,EAAG,OAAM5B,WAAW,CAAC2B,MAAO;UAA7C,CAArC;UAAwF,GAAG,EAAC,sCAA5F;UAAqG,SAAS,EAAC,iBAA/G;UAAiI,OAAO,EAAE/B,KAAK,CAACiC;QAAhJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAI,SAAS,EAAC,gBAAd;UAAA,UAAgC7B,WAAW,CAAC8B;QAA5C;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAG,SAAS,EAAC,eAAb;UAAA,UAA8B9B,WAAW,CAAC+B;QAA1C;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,SAAS,EAAC,sBAAlB;UAAyC,IAAI,EAAC,QAA9C;UAAuD,OAAO,EAAEnC,KAAK,CAACoC;QAAtE;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eASI;QAAQ,cAAW,KAAnB;QAAyB,SAAS,EAAC,qBAAnC;QAAyD,IAAI,EAAC,QAA9D;QAAuE,OAAO,EAAEpC,KAAK,CAACqC;MAAtF;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAcA;MAAS,SAAS,EAAC,UAAnB;MAAA,UACKpC,KAAK,CAACuB,GAAN,CAAWc,IAAD,iBACX,QAAC,IAAD;QACA,IAAI,EAAEA,IADN;QAGA,WAAW,EAAEtC,KAAK,CAACuC,WAHnB;QAIA,UAAU,EAAEzB,cAJZ;QAKA,YAAY,EAAEY;MALd,GAEKY,IAAI,CAAClB,GAFV;QAAA;QAAA;QAAA;MAAA,QADC;IADL;MAAA;MAAA;MAAA;IAAA,QAdA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH;;GAhEQrB,I;;KAAAA,I;AAkET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}